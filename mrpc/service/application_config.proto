syntax = "proto2";
package mrpc;

import "mrpc/util/log.proto";

enum NetworkProtocolConfig
{
    tcp = 1;
    udp = 2;
    pipe = 3;
}

message CommonConfig
{
    optional string     app_name            = 1;
    optional uint32     loop_interval       = 2 [default = 1000];
    optional string     log_path            = 3;
    optional LogType    log_type            = 4 [default = Roll];
    optional LogLevel   mrpc_log_level      = 5 [default = INFO];
    optional LogLevel   log_level           = 6 [default = DEBUG];
}

message NetworkConfig
{
    optional NetworkProtocolConfig protocol = 1 [default = tcp];
    optional string     host                = 2;
    optional uint32     port                = 3;
    optional uint32     timeout             = 4 [default = 5000];
    optional uint32     tcp_backlog         = 5 [default = 128];
}

message ServiceStubConfig
{
    optional string     name                = 1;
    optional NetworkConfig network          = 2;
    optional string     protocol            = 3 [default = "mrpc"];
}

message ServiceProxyConfig
{
    repeated ServiceStubConfig stub         = 1;
}

message ServiceConfig
{
    optional string     name                = 1;
    optional NetworkConfig network          = 2;
    optional string     protocol            = 3 [default = "mrpc"];
    optional uint32     thread_num          = 4 [default = 1];
}

message ServerConfig
{
    repeated ServiceConfig service          = 1;
}

message ApplicationConfig
{
    optional CommonConfig common            = 1;
    optional ServiceProxyConfig proxy       = 2;
    optional ServerConfig server            = 3;
}
